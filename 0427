// pandas 라이브러리 import
import pandas as pd

// DataFrame = table
pd.DataFrame({'Bob': ['I liked it.', 'It was awful.'], 
              'Sue': ['Pretty good.', 'Bland.']},
             index=['Product A', 'Product B'])
""" output
	                Bob	            Sue
Product A	    I liked it.	    Pretty good.
Product B	    It was awful.	  Bland.


// Series = list
pd.Series([1, 2, 3, 4, 5])

// iloc - 인덱스로 selecting
first_descriptions = reviews['description'].iloc[:10]
sample_reviews = reviews.iloc[[1, 2, 3, 5, 8]]

// loc - label로 selecting
df = reviews.loc[[0, 1, 10, 100], ['country', 'province', 'region_1', 'region_2']]
// iloc[:10] : 0, ..., 8, 9 / loc[:10] : 0, ..., 9, 10 
// loc는 label 기반이므로 인덱스 값이 숫자가 아닌 문자라면 문자와 동일한 값 select 해야함, iloc는 10 이전 인덱스까지 반환
// 만약 문자 인덱스 table에서 select 한다면 iloc보다 loc가 유리. 

// Create a DataFrame top_oceania_wines containing all reviews with at least 95 points (out of 100) for wines from Australia or New Zealand.
top_oceania_wines = reviews.loc[
    (reviews.country.isin(['Australia', 'New Zealand'])) // or은 isin으로
    & (reviews.points >= 95)
]

// map - Series 매핑
review_points_mean = reviews.points.mean()
reviews.points.map(lambda p: p - review_points_mean)


bargain_idx = (reviews.points / reviews.price).idxmax() // 가장 큰 value의 인덱스 리턴
bargain_wine = reviews.loc[bargain_idx, 'title']

n_trop = reviews.description.map(lambda desc: "tropical" in desc).sum()
n_fruity = reviews.description.map(lambda desc: "fruity" in desc).sum()
descriptor_counts = pd.Series([n_trop, n_fruity], index=['tropical', 'fruity'])

// apply - DataFrame 매핑
def stars(row):
    if (row.points >= 95) | (row.country == 'Canada'):
        return 3
    elif row.points >= 85:
        return 2
    else:
        return 1    
star_ratings = reviews.apply(stars, axis='columns')
